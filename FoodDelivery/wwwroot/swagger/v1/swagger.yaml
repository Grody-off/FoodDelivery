openapi: 3.0.1
info:
  title: Food Delivery API
  description: An ASP.NET Core Web API for food delivery
  contact:
    name: Grody
    url: https://t.me/GroD_off
  version: v1
paths:
  /Address:
    get:
      tags:
        - Address
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AddressModel'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AddressModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AddressModel'
    post:
      tags:
        - Address
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressModel'
          text/json:
            schema:
              $ref: '#/components/schemas/AddressModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AddressModel'
      responses:
        '200':
          description: Success
    put:
      tags:
        - Address
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressModel'
          text/json:
            schema:
              $ref: '#/components/schemas/AddressModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AddressModel'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - Address
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressModel'
          text/json:
            schema:
              $ref: '#/components/schemas/AddressModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AddressModel'
      responses:
        '204':
          description: Success
  '/Address/{id}':
    get:
      tags:
        - Address
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AddressModel'
            application/json:
              schema:
                $ref: '#/components/schemas/AddressModel'
            text/json:
              schema:
                $ref: '#/components/schemas/AddressModel'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  /Order:
    get:
      tags:
        - Order
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderModel'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderModel'
    post:
      tags:
        - Order
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderModel'
          text/json:
            schema:
              $ref: '#/components/schemas/OrderModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrderModel'
      responses:
        '200':
          description: Success
    put:
      tags:
        - Order
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderModel'
          text/json:
            schema:
              $ref: '#/components/schemas/OrderModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrderModel'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - Order
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderModel'
          text/json:
            schema:
              $ref: '#/components/schemas/OrderModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrderModel'
      responses:
        '204':
          description: Success
  '/Order/{id}':
    get:
      tags:
        - Order
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OrderModel'
            application/json:
              schema:
                $ref: '#/components/schemas/OrderModel'
            text/json:
              schema:
                $ref: '#/components/schemas/OrderModel'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  /Product:
    get:
      tags:
        - Product
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductModel'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductModel'
    post:
      tags:
        - Product
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductModel'
          text/json:
            schema:
              $ref: '#/components/schemas/ProductModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProductModel'
      responses:
        '200':
          description: Success
    put:
      tags:
        - Product
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductModel'
          text/json:
            schema:
              $ref: '#/components/schemas/ProductModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProductModel'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - Product
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductModel'
          text/json:
            schema:
              $ref: '#/components/schemas/ProductModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProductModel'
      responses:
        '204':
          description: Success
  '/Product/{id}':
    get:
      tags:
        - Product
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ProductModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductModel'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  /User:
    get:
      tags:
        - User
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserModel'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserModel'
    post:
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserModel'
          text/json:
            schema:
              $ref: '#/components/schemas/UserModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserModel'
      responses:
        '200':
          description: Success
    put:
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserModel'
          text/json:
            schema:
              $ref: '#/components/schemas/UserModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserModel'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserModel'
          text/json:
            schema:
              $ref: '#/components/schemas/UserModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserModel'
      responses:
        '204':
          description: Success
  '/User/{id}':
    get:
      tags:
        - User
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UserModel'
            application/json:
              schema:
                $ref: '#/components/schemas/UserModel'
            text/json:
              schema:
                $ref: '#/components/schemas/UserModel'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
components:
  schemas:
    AddressModel:
      type: object
      properties:
        city:
          type: string
          nullable: true
        street:
          type: string
          nullable: true
        house:
          type: string
          nullable: true
      additionalProperties: false
    OrderModel:
      type: object
      properties:
        userId:
          type: integer
          format: int64
        addressId:
          type: integer
          format: int64
        commentary:
          type: string
          nullable: true
        totalPrice:
          type: number
          format: double
      additionalProperties: false
    ProductModel:
      type: object
      properties:
        name:
          type: string
          nullable: true
        price:
          type: number
          format: double
        amount:
          type: integer
          format: int32
      additionalProperties: false
    UserModel:
      type: object
      properties:
        name:
          type: string
          nullable: true
        addressId:
          type: integer
          format: int64
      additionalProperties: false